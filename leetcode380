hash map 字典的时间复杂度是O(1)
random.choice(data) 随机获取元素
把传入的val存到字典里,来方便进行查找以及添加删除


Python 的列表是动态数组，它不支持在 O(1) 时间内直接移除某个指定的元素。list.remove(val) 的时间复杂度是 O(n)，因为它需要线性扫描列表以找到元素并删除它。
为了保证 remove 操作的时间复杂度为 O(1)，我们将要删除的元素与列表末尾的元素交换，然后移除最后一个元素。用pop()默认删掉最后一个元素,时间复杂度是O(1)

添加和random都很简单 删除核心是要把当前删除的元素和list里最后一个元素替换,然后直接用pop删掉,这样来最优时间复杂度


del 可以根据键删除字典中的元素。如果键不存在，则会抛出 KeyError。
my_dict = {"a": 1, "b": 2, "c": 3}

# 删除键 'a'
del my_dict["a"]
print(my_dict)  # 输出: {'b': 2, 'c': 3}

